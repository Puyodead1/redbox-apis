/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export interface AppConfig {
  adServerConfig: ServiceConfig;
  dataServiceConfig: ServiceConfig;
  dbConfig: DbConfig;
  iotCertificateServiceConfig: ServiceConfig;
  kioskInventoryServiceConfig: ServiceConfig;
  loginInfo: {
    desktop: {
      password: string;
      username: string;
    }[];
    field: {
      password: string;
      username: string;
    }[];
  };
  proxyServiceConfig: ServiceConfig;
  reelsConfig: ServiceConfig;
  transactionServiceConfig: ServiceConfig;
}

export interface AuthorizeRequest {
  AuthAcceptFlag?: boolean;
  AuthAmount?: number;
  AuthRuleId?: number;
  CreditCard: CreditCard;
  CustomerProfileNumber?: string;
  KioskId: number;
  MessageId: string;
  ShoppingCart: ShoppingCart;
  SkipAuthRule?: boolean;
  TransactionDate: Date;
}

export interface BlurayUpsell {
  Offer: string;
  ProductGroupId: number;
  TitleId: number;
  TypeId?: number;
}

export interface CreditCard {
  BIN?: string;
  CardId?: string;
  CardSourceType?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
  CardType: number;
  ContactlessEnabled: boolean;
  EmvEnabledTerminal: boolean;
  ExpirationMonth?: string;
  ExpirationYear?: string;
  FallbackType?: number;
  FirstName?: string;
  ICEncryptedData?: string;
  IsEncrypted: boolean;
  IsTechnicalFallback?: boolean;
  KSN?: string;
  KeyId?: number;
  LastFour?: string;
  LastName?: string;
  Number?: string;
  PostalCode: string;
  ReaderSerialNumber?: string;
  Track2?: string;
}

export interface DbConfig {}

export interface DiscOffer {
  Barcode: string;
  OfferCode: string;
}

export interface Discount {
  Amount: number;
  ApplyOnlyToProduct?: boolean;
  DiscountType: number;
  ProductId: number;
  PromotionCode: string;
  PromotionCodeValue?: string;
  PromotionIntentCode?: string;
  RedemptionPoints?: number;
  Status: number;
}

export interface LineItem {
  Barcode: string;
  BlurayUpsell?: BlurayUpsell;
  OfferCode?: string;
  Pricing: Pricing;
  ProductFamily: string;
  ProductId: number;
  ProductName: string;
  ProductType: string;
  SourceType?: number;
  SubscriptionId?: string;
  TempPassword?: string;
  TivoQueryId?: string;
  VendStatus: number;
}

export interface LineItemGroup {
  GroupType: number;
  Items?: LineItem[];
  Totals: Totals;
}

export interface MessageBase {
  KioskId: number;
  MessageId: string;
}

export interface Pricing {
  DefaultExtraNight?: number;
  DefaultInitialNight?: number;
  Expiration: number;
  ExtraNight: number;
  InitialDays?: number;
  InitialNight: number;
  NonReturn: number;
  NonReturnDays: number;
  PriceSetId: number;
  ProductPriceId?: number;
  Purchase: number;
}

export interface ReconcileRequest {
  Blocklisted: boolean;
  CreditCard: CreditCard;
  CustomerProfileNumber: string;
  DiscOfferCodes: DiscOffer[];
  Email: string;
  IsEarlyId: boolean;
  IsEarlyIdApple: boolean;
  IsEarlyIdGoogle: boolean;
  IsOffline: boolean;
  KioskId: number;
  MessageId: string;
  ParentTransactionId?: number;
  PlayPassPointsEarned?: number;
  PlayPassPromptAccepted: boolean;
  RedeemedCustomerOffer: RedeemedOffer;
  ReferenceNumber?: number;
  ShoppingCart: ShoppingCart;
  TransactionDate?: Date;
  UtcOffset: string;
}

export interface RedeemedOffer {
  CampaignId?: number;
  OfferId: number;
  StoredOfferId?: number;
}

export interface ReturnRequest {
  Barcode: string;
  Deck: number;
  FailedSecurityRead: boolean;
  KioskId: number;
  MessageId: string;
  ReturnDate: Date;
  ReturnType: number;
  Slot: number;
}

export interface ServiceConfig {
  host: string;
  port: number;
}

export interface ShoppingCart {
  Discounts?: Discount[];
  Groups?: LineItemGroup[];
}

export interface Totals {
  DiscountedSubtotal: number;
  GrandTotal: number;
  Subtotal: number;
  TaxAmount: number;
  TaxRate: number;
}
